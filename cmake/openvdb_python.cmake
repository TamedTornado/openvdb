#
#
#

FIND_PACKAGE ( Boost ${MINIMUM_BOOST_VERSION} REQUIRED COMPONENTS iostreams system thread python )
FIND_PACKAGE ( PythonInterp REQUIRED )
FIND_PACKAGE ( PythonLibs REQUIRED )

INCLUDE_DIRECTORIES ( ${PYTHON_INCLUDE_DIR} )
# MESSAGE ( "PYTHONLIBS_VERSION_STRING = ${PYTHONLIBS_VERSION_STRING}" )

STRING(REPLACE "." ";" VERSION_LIST ${PYTHONLIBS_VERSION_STRING})
LIST(GET VERSION_LIST 0 OPENVDB_PYTHON_VERSION_MAJOR)
LIST(GET VERSION_LIST 1 OPENVDB_PYTHON_VERSION_MINOR)
LIST(GET VERSION_LIST 2 OPENVDB_PYTHON_VERSION_PATCH)

# MESSAGE ( "OPENVDB_PYTHON_VERSION_MAJOR = ${OPENVDB_PYTHON_VERSION_MAJOR}" )
# MESSAGE ( "OPENVDB_PYTHON_VERSION_MINOR = ${OPENVDB_PYTHON_VERSION_MINOR}" )


SET ( OPENVDB_PYTHON_MODULE_SOURCE_FILES
	python/pyFloatGrid.cc
	python/pyIntGrid.cc
	python/pyMetadata.cc
	python/pyOpenVDBModule.cc
	python/pyTransform.cc
	python/pyVec3Grid.cc
)

SET_SOURCE_FILES_PROPERTIES ( ${OPENVDB_PYTHON_MODULE_SOURCE_FILES}
PROPERTIES
COMPILE_FLAGS "-DOPENVDB_PRIVATE -DOPENVDB_USE_BLOSC ${OPENVDB_USE_GLFW_FLAG}"
)

ADD_LIBRARY ( pyopenvdb SHARED
${OPENVDB_PYTHON_MODULE_SOURCE_FILES}
)

TARGET_LINK_LIBRARIES ( pyopenvdb
openvdb_static
${BLOSC_blosc_LIBRARY}
${OPENGL_gl_LIBRARY}
${OPENGL_glu_LIBRARY}
${COCOA_LIBRARY}
${IOKIT_LIBRARY}
${COREVIDEO_LIBRARY}
${GLFW_LINK_LIBRARY}
${GLFW_DEPENDENT_LIBRARIES}
${GLEW_GLEW_LIBRARY}
${Boost_LIBRARIES}
${PYTHON_LIBRARY}
)

SET_TARGET_PROPERTIES ( pyopenvdb PROPERTIES
PREFIX ""
)

ADD_TEST ( pytest ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/python/test/TestOpenVDB.py )
SET_TESTS_PROPERTIES ( pytest PROPERTIES ENVIRONMENT "PYTHONPATH=${CMAKE_CURRENT_BINARY_DIR}")

INSTALL ( TARGETS
	pyopenvdb
	DESTINATION
	lib/python${OPENVDB_PYTHON_VERSION_MAJOR}.${OPENVDB_PYTHON_VERSION_MINOR}
)
